=== tests/cases/conformance/classes/members/privateNames/privateNameFieldUnaryMutation.ts ===
class C {
>C : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))

    #test: number = 24;
>#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))

    constructor() {
        this.#test++;
>this.#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))

        this.#test--;
>this.#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))

        ++this.#test;
>this.#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))

        --this.#test;
>this.#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
    }
    test() {
>test : Symbol(C.test, Decl(privateNameFieldUnaryMutation.ts, 7, 5))

        this.getInstance().#test++;
>this.getInstance().#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this.getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
>getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))

        this.getInstance().#test--;
>this.getInstance().#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this.getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
>getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))

        ++this.getInstance().#test;
>this.getInstance().#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this.getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
>getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))

        --this.getInstance().#test;
>this.getInstance().#test : Symbol(C.#test, Decl(privateNameFieldUnaryMutation.ts, 0, 9))
>this.getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
>this : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
>getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
    }
    getInstance() { return new C(); }
>getInstance : Symbol(C.getInstance, Decl(privateNameFieldUnaryMutation.ts, 13, 5))
>C : Symbol(C, Decl(privateNameFieldUnaryMutation.ts, 0, 0))
}

